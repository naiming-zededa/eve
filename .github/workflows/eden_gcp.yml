---
name: EdenGCP
on:  # yamllint disable-line rule:truthy
  workflow_run:
    workflows:
      - Publish
    types:
      - completed
# yamllint disable rule:line-length
jobs:
  integration:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        hv: ["kvm", "xen"]
    steps:
      - name: Check
        run: |
          for addr in $(ip addr list|sed -En -e 's/.*inet ([0-9.]+).*/\1/p')
          do
              if echo "$addr" | grep -q -E "10.11.(12|13).[0-9]+"; then
                echo "$addr overlaps with test"; exit 1
              fi
              if echo "$addr" | grep -q -E "10.8.0.[0-9]+"; then
                echo "$addr overlaps with vpn"; exit 1
              fi
          done
      - name: setup packages
        run: |
          sudo apt update
          sudo apt install -y qemu-utils openvpn curl jq
          echo "$OVPN_FILE" | base64 -d > ./config.ovpn
        env:
          OVPN_FILE: ${{ secrets.OVPN_FILE }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: clean
        run: |
          gcloud compute instances delete eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -q --zone=us-west1-a || echo "Does not exist"
          gcloud compute images delete eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -q || echo "Does not exist"
      - name: Connect VPN
        id: connect_vpn
        timeout-minutes: 1
        run: |
          sudo openvpn --config ./config.ovpn --daemon
          until ip -f inet addr show tun0; do sleep 5; ip a; done
          echo ::set-output name=tunnel_ip::$(ip -f inet addr show tun0 | sed -En -e 's/.*inet ([0-9.]+).*/\1/p')
      - name: get eve
        uses: actions/checkout@v2
        with:
          path: 'eve'
      - name: prepare eden
        run: |
          if [ -f ${{ github.workspace }}/eve/tests/eden/eden-version ]; then
            EDEN_VERSION=$(cat ${{ github.workspace }}/eve/tests/eden/eden-version)
          else
            EDEN_VERSION=lfedge/eden:30c8b3f
          fi
          docker run -v $PWD:/out $EDEN_VERSION cp -a /eden/. /out/
          sudo chown -R $(whoami) .
          ./eden config add default
      - name: setup
        run: |
          export ipv4=`curl https://api.ipify.org/?format=json | jq ".ip" -r`
          ./eden config add default --devmodel GCP
          ./eden config set default --key eve.tag --value="snapshot"
          ./eden config set default --key eve.hv --value ${{ matrix.hv }}
          ./eden config set default --key adam.eve-ip --value ${{ steps.connect_vpn.outputs.tunnel_ip }}
          ./eden config set default --key registry.ip --value ${{ steps.connect_vpn.outputs.tunnel_ip }}
          ./eden config set default --key=eden.tests --value=${{ github.workspace }}/eve/tests/eden
          ./eden utils gcp firewall --source-range $ipv4/32 --name eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -k "$GOOGLE_APPLICATION_CREDENTIALS"
          ./eden setup -v debug
          ./eden utils gcp image --image-name eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -k "$GOOGLE_APPLICATION_CREDENTIALS" upload
          ./eden utils gcp vm --image-name eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} --vm-name eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -k "$GOOGLE_APPLICATION_CREDENTIALS" run
          ./eden start
          sleep 100
          BWD=$(./eden utils gcp vm get-ip --vm-name eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -k "$GOOGLE_APPLICATION_CREDENTIALS") || { echo "no IP, probably VM does not exist"; exit 1; }
          echo "the IP is $BWD"
          ./eden utils gcp firewall -k "$GOOGLE_APPLICATION_CREDENTIALS" --source-range $BWD --name edengcp-actions-${{ matrix.hv }}-${{github.run_number}} || { echo "cannot set firewall"; exit 1; }
          ./eden eve onboard
          echo > tests/workflow/testdata/eden_stop.txt
      - name: Test
        run: |
          EDEN_TEST=gcp ./eden test ${{ github.workspace }}/eve/tests/eden/workflow -v debug
      - name: Collect logs
        if: ${{ always() }}
        run: |
          ./eden log --format json > trace.log || echo "no log"
          ./eden info > info.log || echo "no info"
          ./eden metric > metric.log || echo "no metric"
          ./eden netstat > netstat.log || echo "no netstat"
          docker logs eden_adam > adam.log 2>&1 || echo "no adam log"
          ./eden utils gcp vm log --vm-name eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -k "$GOOGLE_APPLICATION_CREDENTIALS" > console.log || echo "no device log"
      - name: Log counting
        if: ${{ always() }}
        run: |
          echo "::group::Total errors"
          echo "$(jq '.severity' trace.log|grep err|wc -l)"
          echo "::endgroup::"
          echo "::group::Errors by source"
          echo "errors by source: $(jq -s 'map(select(.severity|contains("err")))|group_by(.source)|map({"source": .[0].source, "total":length})|sort_by(.total)|reverse[]' trace.log)"
          echo "::endgroup::"
          echo "::group::Error log content duplicates"
          echo "$(jq -s 'map(select(.severity | contains("err")))|group_by(.content)|map(select(length>1))' trace.log)"
          echo "::endgroup::"
          echo "::group::Error log function filename duplicates"
          echo "$(jq -s 'map(select(.severity | contains("err")))|group_by(.filename)|map(select(length>10))|map({"source": .[0].source, "filename": .[0].filename, "function": .[0].function, "content": [.[].content], "total":length})|sort_by(.total)| reverse[]' trace.log)"
          echo "::endgroup::"
      - name: Clean
        if: ${{ always() }}
        run: |
          gcloud compute firewall-rules delete eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} || echo "Does not exist"
          gcloud compute firewall-rules delete edengcp-actions-${{ matrix.hv }}-${{github.run_number}} || echo "Does not exist"
          gcloud compute instances delete eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -q --zone=us-west1-a || echo "Does not exist"
          gcloud compute images delete eve-edengcp-actions-${{ matrix.hv }}-${{github.run_number}} -q || echo "Does not exist"
      - name: Store raw test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: eden-report-${{ matrix.hv }}
          path: |
            ${{ github.workspace }}/trace.log
            ${{ github.workspace }}/info.log
            ${{ github.workspace }}/adam.log
            ${{ github.workspace }}/netstat.log
            ${{ github.workspace }}/metric.log
            ${{ github.workspace }}/console.log
