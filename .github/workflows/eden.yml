---
name: Eden
on:
  push:
    branches:
      - "master"
      - "[0-9]+.[0-9]+"
  pull_request_review:
    types: [submitted]

jobs:
  integration:
    runs-on: ubuntu-20.04
    if: ${{ github.event.review.state == 'approved' || github.ref == 'refs/heads/master' }}
    steps:
      - name: Check
        run: |
          for addr in $(ip addr list|sed -En -e 's/.*inet ([0-9.]+).*/\1/p')
          do
              if echo "$addr" | grep -q -E "10.11.(12|13).[0-9]+"; then
                echo "$addr overlaps with test"; exit 1
              fi
          done
      - name: setup
        run: |
          sudo add-apt-repository ppa:canonical-server/server-backports
          sudo apt install -y qemu-utils qemu-system-x86 jq
      - name: get eve
        uses: actions/checkout@v2
        with:
          path: 'eve'
      - name: prepare eden
        run: |
          if [ -f ${{ github.workspace }}/eve/tests/eden/eden-version ]; then
            EDEN_VERSION=$(cat ${{ github.workspace }}/eve/tests/eden/eden-version)
          else
            EDEN_VERSION=lfedge/eden:30c8b3f
          fi
          docker run -v $PWD:/out $EDEN_VERSION cp -a /eden/. /out/
          sudo chown -R $(whoami) .
          ./eden config add default
      - name: fetch or build eve
        env:
          TAG: pr${{ github.event.pull_request.number }}
          CACHE: evebuild/danger
        run: |
          if docker pull "$CACHE:$TAG-kvm"; then
             docker tag  "$CACHE:$TAG-kvm" "lfedge/eve:$TAG-kvm"
             docker tag  "$CACHE:$TAG-kvm" "lfedge/eve:$TAG-kvm-amd64"
          else
             make -C eve V=1 pkgs
             make -C eve V=1 ROOTFS_VERSION="$TAG" HV=kvm eve
             IMAGES="$(docker images -f reference="lfedge/eve-*" -q)"
             IMAGES="$IMAGES $(docker images -f reference="eve-build-*" -q)"
             IMAGES="$IMAGES $(docker images -f reference="golang" -q)"
             IMAGES="$IMAGES $(docker images -f dangling=true -q)"
             docker rmi -f $IMAGES||echo "skip conflicts"
             rm -rf ~/.linuxkit
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: set debug log level
        if: contains(github.event.review.body, '#eden-debug')
        run: |
          ./eden config set default --key=eve.log-level --value=debug
          ./eden config set default --key=eve.adam-log-level --value=debug
      - name: run
        run: |
          ./eden config set default --key eve.tag --value="$TAG"
          ./eden config set default --key=eve.accel --value=false
          ./eden config set default --key=eden.tests --value=${{ github.workspace }}/eve/tests/eden
          EDITOR=cat ./eden config edit default
          echo > ${{ github.workspace }}/eve/tests/eden/workflow/testdata/eden_stop.txt
          ./eden test ${{ github.workspace }}/eve/tests/eden/workflow -v debug
      - name: Collect logs
        if: ${{ always() }}
        run: |
          ./eden log --format json > trace.log || echo "no log"
          ./eden info > info.log || echo "no info"
          ./eden metric > metric.log || echo "no metric"
          ./eden netstat > netstat.log || echo "no netstat"
          cp dist/default-eve.log console.log || echo "no device log"
          docker logs eden_adam > adam.log 2>&1 || echo "no adam log"
      - name: Log counting
        if: ${{ always() }}
        run: |
          echo "::group::Total errors"
          echo "$(jq '.severity' trace.log|grep err|wc -l)"
          echo "::endgroup::"
          echo "::group::Errors by source"
          echo "errors by source: $(jq -s 'map(select(.severity|contains("err")))|group_by(.source)|map({"source": .[0].source, "total":length})|sort_by(.total)|reverse[]' trace.log)"
          echo "::endgroup::"
          echo "::group::Error log content duplicates"
          echo "$(jq -s 'map(select(.severity | contains("err")))|group_by(.content)|map(select(length>1))' trace.log)"
          echo "::endgroup::"
          echo "::group::Error log function filename duplicates"
          echo "$(jq -s 'map(select(.severity | contains("err")))|group_by(.filename)|map(select(length>10))|map({"source": .[0].source, "filename": .[0].filename, "function": .[0].function, "content": [.[].content], "total":length})|sort_by(.total)| reverse[]' trace.log)"
          echo "::endgroup::"
      - name: Store raw test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: 'eden-report'
          path: |
            ${{ github.workspace }}/trace.log
            ${{ github.workspace }}/info.log
            ${{ github.workspace }}/metric.log
            ${{ github.workspace }}/netstat.log
            ${{ github.workspace }}/console.log
            ${{ github.workspace }}/adam.log
