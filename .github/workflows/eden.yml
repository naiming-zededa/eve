---
name: Eden
on:
  push:
    branches: [master]
  pull_request_review:
    branches: [master]
    types: [submitted]

jobs:
  integration:
    runs-on: ubuntu-20.04
    if: ${{ github.event.review.state == 'approved' || github.ref == 'refs/heads/master' }}
    steps:
      - name: Check
        run: |
          for addr in $(ip addr list|sed -En -e 's/.*inet ([0-9.]+).*/\1/p')
          do
              if echo "$addr" | grep -q -E "10.11.(12|13).[0-9]+"; then
                echo "$addr overlaps with test"; exit 1
              fi
          done
      - name: setup
        run: |
          sudo apt update
          sudo apt install -y qemu-utils qemu-system-x86
      - name: get eden
        uses: actions/checkout@v2
        with:
          repository: 'lf-edge/eden'
      - name: build eden
        run: |
          make clean
          make V=1 build
          make V=1 build-tests
          ./eden config add default
      - name: get eve
        uses: actions/checkout@v2
        with:
          path: 'eve'
      - name: fetch or build eve
        env:
          TAG: pr${{ github.event.pull_request.number }}
          CACHE: evebuild/danger
        run: |
          if docker pull "$CACHE:$TAG-kvm"; then
             docker tag  "$CACHE:$TAG-kvm" "lfedge/eve:$TAG-kvm"
             docker tag  "$CACHE:$TAG-kvm" "lfedge/eve:$TAG-kvm-amd64"
          else
             make -C eve V=1 pkgs
             make -C eve V=1 ROOTFS_VERSION="$TAG" HV=kvm eve
             IMAGES="$(docker images -f reference="lfedge/eve-*" -q)"
             IMAGES="$IMAGES $(docker images -f reference="eve-build-*" -q)"
             IMAGES="$IMAGES $(docker images -f reference="golang" -q)"
             IMAGES="$IMAGES $(docker images -f dangling=true -q)"
             docker rmi -f $IMAGES||echo "skip conflicts"
             rm -rf ~/.linuxkit
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: set debug log level
        if: contains(github.event.review.body, '#eden-debug')
        run: |
          ./eden config set default --key=eve.log-level --value=debug
          ./eden config set default --key=eve.adam-log-level --value=debug
      - name: run
        run: |
          ./eden config set default --key eve.tag --value="$TAG"
          ./eden config set default --key=eve.accel --value=false
          ./eden config set default --key=eden.tests --value=${{ github.workspace }}/eve/tests/eden
          EDITOR=cat ./eden config edit default
          echo > ${{ github.workspace }}/eve/tests/eden/workflow/testdata/eden_stop.txt
          ./eden test ${{ github.workspace }}/eve/tests/eden/workflow -v debug
      - name: Collect logs
        if: ${{ always() }}
        run: |
          ./eden log --format json > trace.log || echo "no log"
          ./eden info > info.log || echo "no info"
          cp dist/default-eve.log console.log || echo "no device log"
          docker logs eden_adam > adam.log 2>&1 || echo "no adam log"
      - name: Store raw test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: 'eden-report'
          path: |
            ${{ github.workspace }}/trace.log
            ${{ github.workspace }}/info.log
            ${{ github.workspace }}/console.log
            ${{ github.workspace }}/adam.log
