{{$test_opts := "-test.v -name vnc-app"}}

# Starting of reboot detector with a 1 reboot limit
! test eden.reboot.test -test.v -timewait=0 -reboot=0 -count=1 &

#TestVNCVMStart checks if app processed by EVE, app in RUNNING state
test eden.vnc.test {{$test_opts}} -timewait 15m -test.run TestVNCVMStart
stdout '--- PASS: TestVNCVMStart'

# TestAccess checks if VNC and SSH of app is accessible
test eden.vnc.test {{$test_opts}} -timewait 10m -test.run TestAccess
stdout '--- PASS: TestAccess'

# TestAppLogs checks if logs of app is accessible also it initiates panic
test eden.vnc.test {{$test_opts}} -panic=true -logger=true -timewait 10m -test.run TestAppLogs
stdout '--- PASS: TestAppLogs'

#TestVNCVMDelete initiates deleting of app and checks if app deleted from EVE
test eden.vnc.test {{$test_opts}} -timewait 10m -test.run TestVNCVMDelete
stdout '--- PASS: TestVNCVMDelete'

# Test's config. file
-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
