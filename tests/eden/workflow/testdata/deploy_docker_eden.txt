[!exec:bash] stop
[!exec:curl] stop
[!exec:grep] stop

# Fail if reboot
! test eden.reboot.test -test.v -timewait=0 -reboot=0 -count=1 &

eden pod deploy -p 8028:80 docker://nginx
stdout 'deploy pod .* with docker://nginx request sent'

exec bash wait4running.sh
stdout RUNNING

exec bash http_test.sh
stdout 'Welcome to nginx'

exec bash del_dckr.sh
stdout 'app .* delete done'

-- wait4running.sh --
#!/bin/bash

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
until $EDEN pod ps | grep RUNNING; do sleep 3; done

-- http_test.sh --
#!/bin/bash

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

$EDEN pod ps | grep nginx || exit

URL=`$EDEN pod ps | grep nginx | awk '{print $4}'`

test -n "$URL" && until curl $URL | grep 'Welcome to nginx'; do sleep 3; done

-- del_dckr.sh --
#!/bin/bash

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
POD=`$EDEN pod ps | grep nginx | awk '{print $1}'`
$EDEN pod delete $POD

-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}

