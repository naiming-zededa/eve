# Simple test of 2 USB passthrough functionality after reboot of guest
# Works only on KVM

{{define "port"}}2223{{end}}
{{define "ssh"}} ssh -oServerAliveInterval=10 -oConnectTimeout=10 -oStrictHostKeyChecking=no -oPasswordAuthentication=no -i {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa -p {{template "port"}} root@$HOST {{end}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:ssh] stop

# Starting of reboot detector with a 2 reboot limit
! test eden.reboot.test -test.v -timewait 10m -reboot=0 -count=2 &

eden pod deploy -n eclient --memory=512MB docker://itmoeve/eclient:0.7 -p {{template "port"}}:22 --adapters USB2:2 --adapters USB2:3

test eden.app.test -test.v -timewait 20m RUNNING eclient

exec -t 20m bash ssh.sh {{template "port"}}
stdout 'Ubuntu'

# Check usb_1
exec -t 20m bash get-lshw.sh {{template "port"}}
stdout '1024B QEMU HARDDISK'

# Check usb_2
exec -t 20m bash get-lshw.sh {{template "port"}}
stdout '10MB QEMU HARDDISK'

exec -t 5m bash get_reboot_time.sh
cp stdout reboot_time

# Reboot application
! exec -t 1m bash reboot.sh

# Wait for reboot
exec -t 20m bash ssh.sh
stdout 'Ubuntu'

# Check usb_1
exec -t 20m bash get-lshw.sh {{template "port"}}
stdout '1024B QEMU HARDDISK'

# Check usb_2
exec -t 20m bash get-lshw.sh {{template "port"}}
stdout '10MB QEMU HARDDISK'

exec -t 5m bash get_reboot_time.sh
#! cmp stdout reboot_time

# teardown applications
eden pod delete eclient

test eden.app.test -test.v -timewait 20m - eclient

-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}

-- ssh.sh --
port=$1
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
HOST=$($EDEN eve ip)

for i in `seq 20`
do
sleep 20
# Test SSH-access to container
echo $i\) {{template "ssh"}} grep Ubuntu /etc/issue
{{template "ssh"}} grep Ubuntu /etc/issue && break
done


-- get_reboot_time.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
HOST=$($EDEN eve ip)

echo {{template "ssh"}} uptime -s
{{template "ssh"}} uptime -s

-- get-lshw.sh --
port=$1
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
HOST=$($EDEN eve ip)
 echo {{template "ssh"}} lshw -businfo
 {{template "ssh"}} lshw -businfo

-- reboot.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
HOST=$($EDEN eve ip)

echo {{template "ssh"}} reboot
{{template "ssh"}} reboot